{"version":3,"sources":["config.js","App/layout/Loader/index.js","hoc/_Aux/index.js","store/actions.js","App/layout/ScrollToTop/index.js","route.js","App/index.js","serviceWorker.js","store/reducer.js","index.js"],"names":["defaultPath","basename","layout","subLayout","collapseMenu","layoutType","headerBackColor","rtlLayout","navFixedLayout","headerFixedLayout","boxLayout","loader","className","Aux","props","children","COLLAPSE_MENU","COLLAPSE_TOGGLE","FULL_SCREEN","FULL_SCREEN_EXIT","CHANGE_LAYOUT","CHANGE_SUB_LAYOUT","LAYOUT_TYPE","RESET","NAV_BACK_COLOR","HEADER_BACK_COLOR","RTL_LAYOUT","NAV_FIXED_LAYOUT","HEADER_FIXED_LAYOUT","BOX_LAYOUT","NAV_CONTENT_LEAVE","NAV_COLLAPSE_LEAVE","SAVE_USER_DETAILS","GET_TANK_LIST","GET_LC_LIST","GET_TANK_DETAILS","SAVE_RECORD_STATUS","UPDATE_RECORD_STATUS","LC_DELETE_RECORD_STATUS","LC_COPY_RECORD_STATUS","CLEAR_ALL_TANK_DATA","ERROR","GET_VESSEL_LIST","CLEAR_ALL_VESSEL_DATA","GET_USER_LIST","CLEAR_ALL_USER_DATA","GET_FW_LIST","DELETE_RECORD_STATUS","CLEAR_ALL_FW_DATA","ScrollToTop","prevProps","this","location","window","scrollTo","React","Component","withRouter","SignIn","lazy","Error","OfflineUI","route","path","exact","name","component","AdminLayout","Loadable","loading","Loader","App","menu","routes","map","index","Route","key","render","fallback","Switch","Boolean","hostname","match","initialState","isOpen","isTrigger","config","isFullScreen","reducer","state","action","trigger","open","type","actionTypes","triggerIndex","indexOf","id","filter","item","tankList","lcList","getTankDetails","recordSaveStatus","recordUpdateStatus","recordLCDeleteStatus","recordCopyStatus","vesselList","fwList","recordDeleteStatus","loggedInUserDetails","userDetails","error","userList","store","createStore","applyMiddleware","thunk","app","BrowserRouter","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.38df7c99.chunk.js","sourcesContent":["export default {\n    defaultPath: '/dashboard',\n    basename: '/able-pro/react/default', // only at build time to set, like ///able-pro/react/default\n    layout: 'horizontal', // vertical, horizontal\n    subLayout: '', // horizontal-2\n    collapseMenu: false, // mini-menu\n    layoutType: 'menu-dark', // menu-dark, menu-light, dark\n    headerBackColor: 'background-img-6', // background-blue, background-red, background-purple, background-info, background-green, background-dark, background-grd-blue, background-grd-red, background-grd-purple, background-grd-info, background-grd-green, background-grd-dark, background-img-1, background-img-2, background-img-3, background-img-4, background-img-5, background-img-6\n    rtlLayout: false,\n    navFixedLayout: true,\n    headerFixedLayout: false,\n    boxLayout: false\n};\n","import React from 'react';\n\nconst loader = () => {\n    return (\n        <div className=\"loader-bg\">\n            <div className=\"loader-track\">\n                <div className=\"loader-fill\"/>\n            </div>\n        </div>\n    );\n};\n\nexport default loader;","const Aux = (props) => props.children;\n\nexport default Aux;","export const COLLAPSE_MENU = 'COLLAPSE_MENU';\nexport const COLLAPSE_TOGGLE = 'COLLAPSE_TOGGLE';\nexport const FULL_SCREEN = 'FULL_SCREEN';\nexport const FULL_SCREEN_EXIT = 'FULL_SCREEN_EXIT';\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\nexport const CHANGE_SUB_LAYOUT = 'CHANGE_SUB_LAYOUT';\nexport const LAYOUT_TYPE = 'LAYOUT_TYPE';\nexport const RESET = 'RESET';\nexport const NAV_BACK_COLOR = 'NAV_BACK_COLOR';\nexport const NAV_BRAND_COLOR = 'NAV_BRAND_COLOR';\nexport const HEADER_BACK_COLOR = 'HEADER_BACK_COLOR';\nexport const RTL_LAYOUT = 'RTL_LAYOUT';\nexport const NAV_FIXED_LAYOUT = 'NAV_FIXED_LAYOUT';\nexport const HEADER_FIXED_LAYOUT = 'HEADER_FIXED_LAYOUT';\nexport const BOX_LAYOUT = 'BOX_LAYOUT';\nexport const NAV_CONTENT_LEAVE = 'NAV_CONTENT_LEAVE';\nexport const NAV_COLLAPSE_LEAVE = 'NAV_COLLAPSE_LEAVE';\n\n//Login\nexport const SAVE_USER_DETAILS = 'SAVE_USER_DETAILS';\n\n//TANK LIST\nexport const GET_TANK_LIST = 'GET_TANK_LIST';\nexport const GET_LC_LIST = 'GET_LC_LIST';\nexport const GET_TANK_DETAILS = 'GET_TANK_DETAILS';\nexport const SAVE_RECORD_STATUS = 'SAVE_RECORD_STATUS';\nexport const UPDATE_RECORD_STATUS = 'UPDATE_RECORD_STATUS';\nexport const LC_DELETE_RECORD_STATUS = 'LC_DELETE_RECORD_STATUS';\nexport const LC_COPY_RECORD_STATUS = 'LC_COPY_RECORD_STATUS0';\nexport const CLEAR_ALL_TANK_DATA = 'CLEAR_ALL_TANK_DATA';\nexport const ERROR = 'ERROR';\n\n//VESSEL LIST\nexport const GET_VESSEL_LIST = 'GET_VESSEL_LIST';\nexport const CLEAR_ALL_VESSEL_DATA = 'CLEAR_ALL_VESSEL_DATA';\n\n//USER LIST\nexport const GET_USER_LIST = 'GET_USER_LIST';\nexport const CLEAR_ALL_USER_DATA = 'CLEAR_ALL_USER_DATA';\n\nexport const GET_FW_LIST = 'GET_FW_LIST';\nexport const DELETE_RECORD_STATUS = \"DELETE_RECORD_STATUS\"\nexport const CLEAR_ALL_FW_DATA = \"CLEAR_ALL_FW_DATA\";","import React from 'react';\nimport { withRouter } from 'react-router';\n\nclass ScrollToTop extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            window.scrollTo(0, 0)\n        }\n    }\n\n    render() {\n        return this.props.children\n    }\n}\n\nexport default withRouter(ScrollToTop);","import React from 'react';\n\nconst SignIn = React.lazy(() => import('./Views/Auth/SignIn'));\nconst Error = React.lazy(() => import('./Demo/Maintenance/Error'));\nconst OfflineUI = React.lazy(() => import('./Demo/Maintenance/OfflineUI'));\nconst ComingSoon = React.lazy(() => import('./Demo/Maintenance/ComingSoon'));\n\nconst route = [\n    { path: '/auth/signin', exact: true, name: 'Signin', component: SignIn },\n    { path: '/maintenance/error', exact: true, name: 'Error', component: Error },\n    { path: '/maintenance/coming-soon', exact: true, name: 'Coming Soon', component: ComingSoon },\n    { path: '/maintenance/offline-ui', exact: true, name: 'Offline UI', component: OfflineUI },\n];\n\nexport default route;","import React, { Component, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Loadable from 'react-loadable';\n\nimport '../../node_modules/font-awesome/scss/font-awesome.scss';\n\nimport Loader from './layout/Loader'\nimport Aux from \"../hoc/_Aux\";\nimport ScrollToTop from './layout/ScrollToTop';\nimport routes from \"../route\";\n\nconst AdminLayout = Loadable({\n    loader: () => import('./layout/AdminLayout'),\n    loading: Loader\n});\n\nclass App extends Component {\n    render() {\n        const menu = routes.map((route, index) => {\n          return (route.component) ? (\n              <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={props => (\n                      <route.component {...props} />\n                  )} />\n          ) : (null);\n        });\n\n        return (\n            <Aux>\n                <ScrollToTop>\n                    <Suspense fallback={<Loader/>}>\n                        <Switch>\n                            {menu}\n                            <Route path=\"/\" component={AdminLayout} />\n                        </Switch>\n                    </Suspense>\n                </ScrollToTop>\n            </Aux>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actions';\nimport config from './../config';\n\nconst initialState = {\n    isOpen: [], //for active default menu\n    isTrigger: [], //for active default menu, set blank for horizontal\n    ...config,\n    isFullScreen: false, // static can't change\n};\n\nconst reducer = (state = initialState, action) => {\n    let trigger = [];\n    let open = [];\n\n    switch (action.type) {\n        case actionTypes.COLLAPSE_MENU:\n            return {\n                ...state,\n                collapseMenu: !state.collapseMenu\n            };\n        case actionTypes.COLLAPSE_TOGGLE:\n            if (action.menu.type === 'sub') {\n                open = state.isOpen;\n                trigger = state.isTrigger;\n\n                const triggerIndex = trigger.indexOf(action.menu.id);\n                if (triggerIndex > -1) {\n                    open = open.filter(item => item !== action.menu.id);\n                    trigger = trigger.filter(item => item !== action.menu.id);\n                }\n\n                if (triggerIndex === -1) {\n                    open = [...open, action.menu.id];\n                    trigger = [...trigger, action.menu.id];\n                }\n            } else {\n                open = state.isOpen;\n                const triggerIndex = (state.isTrigger).indexOf(action.menu.id);\n                trigger = (triggerIndex === -1) ? [action.menu.id] : [];\n                open = (triggerIndex === -1) ? [action.menu.id] : [];\n            }\n\n            return {\n                ...state,\n                isOpen: open,\n                isTrigger: trigger\n            };\n        case actionTypes.NAV_CONTENT_LEAVE:\n            return {\n                ...state,\n                isOpen: open,\n                isTrigger: trigger,\n            };\n        case actionTypes.NAV_COLLAPSE_LEAVE:\n            if (action.menu.type === 'sub') {\n                open = state.isOpen;\n                trigger = state.isTrigger;\n\n                const triggerIndex = trigger.indexOf(action.menu.id);\n                if (triggerIndex > -1) {\n                    open = open.filter(item => item !== action.menu.id);\n                    trigger = trigger.filter(item => item !== action.menu.id);\n                }\n                return {\n                    ...state,\n                    isOpen: open,\n                    isTrigger: trigger,\n                };\n            }\n            return {...state};\n        case actionTypes.FULL_SCREEN :\n            return {\n                ...state,\n                isFullScreen: !state.isFullScreen\n            };\n        case actionTypes.FULL_SCREEN_EXIT:\n            return {\n                ...state,\n                isFullScreen: false\n            };\n        case actionTypes.CHANGE_LAYOUT:\n            return {\n                ...state,\n                layout: action.layout\n            };\n        case actionTypes.CHANGE_SUB_LAYOUT:\n            return {\n                ...state,\n                subLayout: action.subLayout\n            };\n        case actionTypes.LAYOUT_TYPE:\n            return {\n                ...state,\n                layoutType: action.layoutType,\n                headerBackColor: initialState.headerBackColor\n            };\n        case actionTypes.NAV_BACK_COLOR:\n            return {\n                ...state,\n                layoutType: (state.layoutType === 'menu-light') ? 'menu-dark' : state.layoutType\n            };\n        case actionTypes.HEADER_BACK_COLOR:\n            return {\n                ...state,\n                headerBackColor: action.headerBackColor\n            };\n        case actionTypes.RTL_LAYOUT:\n            return {\n                ...state,\n                rtlLayout: !state.rtlLayout\n            };\n        case actionTypes.NAV_FIXED_LAYOUT:\n            return {\n                ...state,\n                navFixedLayout: !state.navFixedLayout\n            };\n        case actionTypes.HEADER_FIXED_LAYOUT:\n            return {\n                ...state,\n                headerFixedLayout: !state.headerFixedLayout,\n                headerBackColor: (!state.headerFixedLayout && initialState.headerBackColor === 'header-default') ? 'header-blue' : state.headerBackColor,\n            };\n        case actionTypes.BOX_LAYOUT:\n            return {\n                ...state,\n                boxLayout: !state.boxLayout\n            };\n        case actionTypes.RESET:\n            return {\n                ...state,\n                layout: initialState.layout,\n                subLayout: initialState.subLayout,\n                collapseMenu: initialState.collapseMenu,\n                layoutType: initialState.layoutType,\n                headerBackColor: initialState.headerBackColor,\n                rtlLayout: initialState.rtlLayout,\n                navFixedLayout: initialState.navFixedLayout,\n                headerFixedLayout: initialState.headerFixedLayout,\n                boxLayout: initialState.boxLayout\n            };\n        case actionTypes.GET_TANK_LIST:\n                return {\n                  ...state,\n                  tankList: action.tankList,\n                  lcList: null\n            }\n        case actionTypes.GET_LC_LIST:\n                return {\n                  ...state,\n                  lcList: action.lcList\n            }\n        case actionTypes.GET_TANK_DETAILS:\n                return {\n                  ...state,\n                  getTankDetails: action.getTankDetails\n            }\n        case actionTypes.SAVE_RECORD_STATUS:\n                return {\n                  ...state,\n                  recordSaveStatus: action.recordSaveStatus\n            }\n        case actionTypes.UPDATE_RECORD_STATUS:\n                return {\n                  ...state,\n                  recordUpdateStatus: action.recordUpdateStatus\n            }\n        case actionTypes.LC_DELETE_RECORD_STATUS:\n                return {\n                  ...state,\n                  recordLCDeleteStatus: action.recordLCDeleteStatus\n            }\n        case actionTypes.LC_COPY_RECORD_STATUS:\n                return {\n                  ...state,\n                  recordCopyStatus: action.recordCopyStatus\n            }\n        case actionTypes.CLEAR_ALL_TANK_DATA:\n                return {\n                  ...state,\n                  getTankDetails: null,\n                  tankList: null,\n                  lcList: null,\n                  recordSaveStatus: null,\n                  recordUpdateStatus: null,\n                  recordLCDeleteStatus: null,\n                  recordCopyStatus: null\n            }\n        case actionTypes.GET_VESSEL_LIST:\n                return {\n                  ...state,\n                  vesselList: action.vesselList\n            }\n        case actionTypes.CLEAR_ALL_VESSEL_DATA:\n                return {\n                  ...state,\n                  vesselList: null,\n                  recordSaveStatus: null,\n                  recordUpdateStatus: null\n            }\n        case actionTypes.GET_FW_LIST:\n                return {\n                  ...state,\n                  fwList: action.fwList\n            }\n        case actionTypes.DELETE_RECORD_STATUS:\n                return {\n                  ...state,\n                  recordDeleteStatus: action.recordDeleteStatus\n            }\n        case actionTypes.CLEAR_ALL_FW_DATA:\n                return {\n                  ...state,\n                  fwList: null,\n                  recordDeleteStatus: null,\n            }\n        case actionTypes.SAVE_USER_DETAILS:\n                return {\n                  ...state,\n                  loggedInUserDetails: action.userDetails\n            }\n        case actionTypes.ERROR:\n                return {\n                  ...state,\n                  error: action.error\n            }\n        case actionTypes.GET_USER_LIST:\n                return {\n                  ...state,\n                  userList: action.userList\n            }\n        case actionTypes.CLEAR_ALL_USER_DATA:\n                return {\n                  ...state,\n                  userList: null,\n                  recordSaveStatus: null,\n                  recordUpdateStatus: null\n            }\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport App from './App/index';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer';\nimport config from './config';\nimport thunk from 'redux-thunk';\n\nimport './assets/scss/style.scss';\n// ** React Perfect Scrollbar\nimport 'react-perfect-scrollbar/dist/css/styles.css'\n\nconst store = createStore(reducer,applyMiddleware(thunk));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter basename={config.basename}>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}