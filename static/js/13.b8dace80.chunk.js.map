{"version":3,"sources":["util/fwDataMapping.js","Views/Stability/index.js","Demo/Dashboard/chart/sale-chart.js","store/api/fixed_weight.js","util/tankDataMapping.js","store/api/loading_tank.js","util/api.js","store/api/vessel.js"],"names":["fwDataMapping","value","dataObjArr","data","obj","ID","LoadingConditionID","itemName","ItemName","weight","isEmpty","Weight","location","Location","LCG","TCG","VCG","AFTLocation","fordLocation","FORDLocation","push","window","jQuery","$","global","Index","state","listOpen","dataObj","isSolve","isSave","isOpen","isEditing","record","id","editingKey","edit","key","setState","copyLC","MySwal","withReactContent","Swal","fire","text","input","then","result","loadingConditionName","props","lcCopyAndCreate","finally","title","html","timer","timerProgressBar","onBeforeOpen","showLoading","onClose","handleOpenModal","deleteLCRow","e","type","showCloseButton","showCancelButton","willDelete","deleteObj","lcList","find","c","deleteLCDetail","index","indexOf","splice","deleteRow","fixedWeightsData","isNaN","deleteFWDetail","handleChange","form","filed","maxVol","tankName","fil","target","toString","handleFWChange","name","sweetAlertHandler","alert","handleFormChange","fieldName","innerFieldName","err","console","log","handleLoadVessel","preventDefault","getAllTankList","vesselName","getAllWeightList","handleSolve","handleSave","forEach","element","loadingConData","vesselID","LCName","isActive","tankData","weightData","saveTankDetail","handleSaveModal","lcID","TankData","updateTankDetail","loadingConName","handleSaveModalClose","getAllLCList","handleOpenModalClose","handleLoadSavedData","getAllSavedTankData","getAllSavedFWData","parseInt","LoadingConditionName","handleAddRow","getAllFWList","vesselList","columns","selector","omit","minWidth","cell","row","onChange","maxVolume","className","style","display","width","margin","padding","disabled","columnsFW","outline","onClick","columnsLC","maxWidth","conditionalCellStyles","when","classNames","nextProps","tankList","this","fwList","recordSaveStatus","recordUpdateStatus","recordCopyStatus","getAllVesselList","defaultTab","map","col","editable","onCell","editing","xl","vessel","VesselName","data-toggle","data-placement","Body","minHeight","defaultActiveKey","onSelect","handleSelect","eventKey","noHeader","responsive","paginationPerPage","fixedHeader","fixedHeaderScrollHeight","variant","size","show","onHide","Header","closeButton","Title","as","Group","controlId","Label","Control","placeholder","Footer","saleChart","striped","hover","bordered","height","overflowY","React","Component","connect","recordDeleteStatus","recordLCDeleteStatus","dispath","options","chart","toolbar","dataLabels","enabled","stroke","curve","xaxis","categories","colors","fill","markers","opacity","strokeWidth","grid","borderColor","yaxis","min","max","series","getFWList","GET_FW_LIST","error","ERROR","config","headers","dataObjs","moment","unix","axios","get","API_URL","res","catch","response","message","post","DELETE_RECORD_STATUS","CLEAR_ALL_FW_DATA","tankDataMapping","TankName","MaxVolume","density","Density","sounding","Sounding","Fil","APIPath","getTankList","GET_TANK_LIST","getLCList","GET_LC_LIST","clearAll","CLEAR_ALL_TANK_DATA","SAVE_RECORD_STATUS","UPDATE_RECORD_STATUS","LC_DELETE_RECORD_STATUS","LC_COPY_RECORD_STATUS","getVesselList","GET_VESSEL_LIST","RecordSaveStatus","RecordUpdateStatus","CLEAR_ALL_VESSEL_DATA","qs","stringify","saveSingleVessel","status","updateSingleVessel","deletVessel"],"mappings":"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","file":"static/js/13.b8dace80.chunk.js","sourcesContent":["import isEmpty from \"./isEmpty\";\nconst fwDataMapping = (value) => {\n    let dataObjArr = [];\n\n    for(var data of value){\n        let obj = {\n            ID: data.ID,\n            LoadingConditionID: data.LoadingConditionID,\n            itemName: data.ItemName,\n            weight: !isEmpty(data.Weight) ? data.Weight : '0',\n            location: !isEmpty(data.Location) ? data.Location : '',\n            LCG: !isEmpty(data.LCG) ? data.LCG : '0',\n            TCG: !isEmpty(data.TCG) ? data.TCG : '0',\n            VCG: !isEmpty(data.VCG) ? data.VCG : '0',\n            AFTLocation: !isEmpty(data.AFTLocation) ? data.AFTLocation : '',\n            fordLocation: !isEmpty(data.FORDLocation) ? data.FORDLocation : ''\n        }\n\n        dataObjArr.push(obj);\n    }\n\n    return dataObjArr;\n}\n\nexport default fwDataMapping;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport Chart from \"react-apexcharts\";\nimport {\n    Row,\n    Col,\n    Card,\n    InputGroup,\n    FormControl,\n    Button,\n    Table,\n    Tabs,\n    Tab,\n    Alert,\n    Modal,\n    Form\n} from 'react-bootstrap';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nimport Aux from \"../../hoc/_Aux\";\n\nimport saleChart from '../../Demo/Dashboard/chart/sale-chart';\nimport Swal from 'sweetalert2';\nimport withReactContent from 'sweetalert2-react-content';\nimport DataTable from 'react-data-table-component';\nimport isEmpty from '../../util/isEmpty';\nimport { getAllTankList, saveTankDetail, getAllLCList, getAllSavedTankData, updateTankDetail, deleteLCDetail, lcCopyAndCreate, getAllWeightList } from \"../../store/api/loading_tank\";\nimport { getAllVesselList } from \"../../store/api/vessel\";\nimport { getAllFWList, getAllSavedFWData, deleteFWDetail} from \"../../store/api/fixed_weight\";\nimport $ from 'jquery';\n\nwindow.jQuery = $;\nwindow.$ = $;\nglobal.jQuery = $;\nclass Index extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            editingKey: '',\n            form: '',\n            data: [],\n            fixedWeightsData: [],\n            vesselList: [],\n            lcList: [],\n            loadingConName: 'New Loading Condition'\n        }\n\n        this.columns = [\n            {\n                name: 'ID',\n                selector: 'ID',\n                omit: true\n            },\n            {\n                name: 'LoadingConditionID',\n                selector: 'LoadingConditionID',\n                omit: true\n            },\n            {\n                name: 'Tank Name',\n                selector: 'tankName',\n                minWidth: '150px',\n            },\n            {\n                name: 'Max Volume',\n                selector: 'maxVolume',\n                minWidth: '20px'\n            },\n            {\n                name: 'Density',\n                selector: 'density',\n                minWidth: '5px'\n            },\n            {\n                name: 'Sounding',\n                selector: 'sounding',\n                minWidth: '5px'\n            },\n            {\n                name: 'Fil',\n                selector: 'fil',\n                minWidth: '5px',\n                cell: row => {\n                  return (\n                    <div>\n                         {row.fil != \"\" ? <input type='text' value={row.fil} name='fil' onChange={(e) => this.handleChange(e, 'form', row.tankName, row.maxVolume)} className='type-2' style={{ display:'block', width:'100%', margin:'0 0', padding:'5px'}}/> : ''}\n                    </div>\n                  )\n                }\n            },\n            {\n                name: 'Weight',\n                selector: 'weight',\n                minWidth: '5px',\n                cell: row => {\n                  return (\n                    <div>\n                         {row.weight != \"\" ? <input type='text' disabled={true} value={row.weight} name='weight' onChange={(e) => this.handleChange(e, 'form', row.tankName, row.maxVolume)} className='type-2' style={{ display:'block', width:'100%', margin:'0 0', padding:'5px'}}/> : ''}\n                    </div>\n                  )\n                }\n            },\n            {\n                name: 'Location',\n                selector: 'location',\n                minWidth: '5px'\n            },\n            {\n                name: 'LCG',\n                selector: 'LCG',\n                minWidth: '5px'\n            },\n            {\n                name: 'TCG',\n                selector: 'TCG',\n                minWidth: '5px'\n            },\n            {\n                name: 'VCG',\n                selector: 'VCG',\n                minWidth: '5px'\n            }\n        ]\n\n        this.columnsFW = [\n            {\n                name: 'ID',\n                selector: 'ID',\n                omit: true\n            },\n            {\n                name: 'LoadingConditionID',\n                selector: 'LoadingConditionID',\n                omit: true\n            },\n            {\n                name: 'Item Name',\n                selector: 'itemName',\n                minWidth: '120px',\n                cell: row => {\n                  return (\n                    <div>\n                         <input type='text' value={row.itemName} name='itemName' onChange={(e) => this.handleFWChange(e, 'form', row.ID)} className='type-2' style={{ display:'block', width:'100%', margin:'0 0', padding:'5px'}}/>\n                    </div>\n                  )\n                }\n            },\n            {\n                name: 'Weight',\n                selector: 'weight',\n                minWidth: '35px',\n                cell: row => {\n                  return (\n                    <div>\n                         <input type='text' value={row.weight} name='weight' onChange={(e) => this.handleFWChange(e, 'form', row.ID)} className='type-2' style={{ display:'block', width:'100%', margin:'0 0', padding:'5px'}}/>\n                    </div>\n                  )\n                }\n            },\n            {\n                name: 'LCG',\n                selector: 'LCG',\n                minWidth: '5px',\n                cell: row => {\n                  return (\n                    <div>\n                         <input type='text' value={row.LCG} name='LCG' onChange={(e) => this.handleFWChange(e, 'form', row.ID)} className='type-2' style={{ display:'block', width:'100%', margin:'0 0', padding:'5px'}}/>\n                    </div>\n                  )\n                }\n            },\n            {\n                name: 'TCG',\n                selector: 'TCG',\n                minWidth: '5px',\n                cell: row => {\n                  return (\n                    <div>\n                         <input type='text' value={row.TCG} name='TCG' onChange={(e) => this.handleFWChange(e, 'form', row.ID)} className='type-2' style={{ display:'block', width:'100%', margin:'0 0', padding:'5px'}}/>\n                    </div>\n                  )\n                }\n            },\n            {\n                name: 'VCG',\n                selector: 'VCG',\n                minWidth: '5px',\n                cell: row => {\n                  return (\n                    <div>\n                         <input type='text' value={row.VCG} name='VCG' onChange={(e) => this.handleFWChange(e, 'form', row.ID)} className='type-2' style={{ display:'block', width:'100%', margin:'0 0', padding:'5px'}}/>\n                    </div>\n                  )\n                }\n            },\n            {\n                name: 'AFT Location',\n                selector: 'AFTLocation',\n                minWidth: '5px',\n                cell: row => {\n                  return (\n                    <div>\n                         <input type='text' value={row.AFTLocation} name='AFTLocation' onChange={(e) => this.handleFWChange(e, 'form', row.ID)} className='type-2' style={{ display:'block', width:'100%', margin:'0 0', padding:'5px'}}/>\n                    </div>\n                  )\n                }\n            },\n            {\n                name: 'FORD Location',\n                selector: 'fordLocation',\n                minWidth: '5px',\n                cell: row => {\n                  return (\n                    <div>\n                         <input type='text' value={row.fordLocation} name='fordLocation' onChange={(e) => this.handleFWChange(e, 'form', row.ID)} className='type-2' style={{ display:'block', width:'100%', margin:'0 0', padding:'5px'}}/>\n                    </div>\n                  )\n                }\n            },\n            {\n                name: 'Action',\n                minWidth: '5px',\n                cell: row => {\n                  return (\n                    <Button className='btn btn-sm btn-danger' outline onClick={() => this.deleteRow(row.ID)}>\n                        <i className=\"fa fa-trash\" />\n                    </Button>\n                  )\n                }\n            }\n        ]\n\n        this.columnsLC = [\n            {\n                name: 'ID',\n                selector: 'ID',\n                omit: true\n            },\n            {\n                maxWidth: '5px',\n                cell: row => {\n                  return (\n                      <>\n                        <Button className='btn btn-sm btn-primary mr-1' outline onClick={() => this.copyLC(row.ID)}>\n                            <i className=\"fa fa-copy\" />\n                        </Button>\n                        <Button className='btn btn-sm btn-danger' outline onClick={(e) => this.deleteLCRow(e, row.ID)}>\n                            <i className=\"fa fa-trash\" />\n                        </Button>\n                      </>\n                    \n                  )\n                }\n            },\n            {\n                selector: 'LoadingConditionName',\n                cell: row => {\n                    return (\n                        <>\n                          <div onClick={() => this.handleLoadSavedData(row.ID)}>\n                              {row.LoadingConditionName}\n                          </div>\n                        </>\n                      \n                    )\n                },\n                conditionalCellStyles: [\n                    {\n                        when: row => row.LoadingConditionName != null,\n                        classNames: ['cell-3-undefined']\n                    }\n                ]\n            }\n\n        ]\n    }\n\n    state = {\n        listOpen: false,\n        dataObj: '',\n        isSolve: false,\n        isSave: false,\n        isOpen: false\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (!isEmpty(nextProps.tankList)) {\n            this.setState({\n                data: nextProps.tankList,\n            });\n        }\n        if (!isEmpty(nextProps.lcList)) {\n            this.setState({\n                lcList: nextProps.lcList,\n            });\n        }\n        if (!isEmpty(nextProps.fwList)) {\n            this.setState({\n                fixedWeightsData: nextProps.fwList,\n            });\n        }\n        if (!isEmpty(nextProps.vesselList)) {\n            this.setState({\n                vesselList: nextProps.vesselList,\n            });\n        }\n        if (!isEmpty(nextProps.recordSaveStatus)) {\n            this.setState({ isSave: false })\n            this.sweetAlertHandler({ title: \"Saved Successfully!\", text: nextProps.recordSaveStatus, type: 'success' })\n        }\n        if (!isEmpty(nextProps.recordUpdateStatus)) {\n            this.sweetAlertHandler({ title: \"Update Successfully!\", text: nextProps.recordUpdateStatus, type: 'success' })\n        }\n        if (!isEmpty(nextProps.recordCopyStatus)) { \n            \n        }\n    }\n\n    componentDidMount() {\n        this.props.getAllVesselList();\n    }\n\n    isEditing = (record) => {\n        if (record.id === this.state.editingKey) {\n          return true\n        }\n    }\n\n    edit = (key) => {\n        this.setState({ editingKey: key })\n    }\n\n    copyLC = (key) => {\n        this.setState({ isOpen: false })\n\n        const MySwal = withReactContent(Swal);\n        MySwal.fire({\n            text: 'Enter New Loading Condition Name:',\n            input: 'text',\n        }).then((result) => {\n            if (result.value) {\n                const data = {\n                    ID: key,\n                    loadingConditionName: result.value\n                }\n\n                this.props.lcCopyAndCreate(data);\n            } else {\n                return MySwal.fire('Invalid!', 'Please Enter Loading Condition Name', 'error');\n            }\n        }).finally(() => {\n            Swal.fire({\n                title: 'Please Wait..!',\n                html: 'New Loading Condition Creating...',\n                timer: 1500,\n                timerProgressBar: true,\n                onBeforeOpen: () => {\n                    Swal.showLoading()\n                },\n                onClose: () => {\n                    //this.sweetAlertHandler({ title: \"Successfully!\", text: nextProps.recordCopyStatus, type: 'success' })\n                    this.handleOpenModal(); \n                }\n                }).then((result) => {\n            \n                })\n        });\n    }\n    \n    deleteLCRow = (e, key) => {\n        this.setState({ isOpen: false })\n        const MySwal = withReactContent(Swal);\n\n        MySwal.fire({\n            title: 'Are you sure?',\n            text: 'Once deleted, you will not be able to recover this Loading Condition file!',\n            type: 'warning',\n            showCloseButton: true,\n            showCancelButton: true\n        }).then((willDelete) => {\n            if (willDelete.value) {\n                let deleteObj = this.state.lcList.find(c => c.ID === key)\n\n                const data = {\n                    ID: key\n                };\n\n                this.props.deleteLCDetail(data);\n\n                var index = this.state.lcList.indexOf(deleteObj);\n\n                if (index > -1) { \n                    this.state.lcList.splice(index, 1);\n                }\n\n                this.setState({\n                    lcList: this.state.lcList\n                })\n            } else {\n                return MySwal.fire('', 'Your Loading Condition file is safe!', 'error');\n            }\n        }).finally(() => {\n            this.setState({ isOpen: true })\n        });\n\n        \n    }\n    \n    deleteRow = (key) => {\n\n        let deleteObj = this.state.fixedWeightsData.find(c => c.ID === key)\n\n        const data = {\n            ID: key\n        }\n        if(!isNaN(key)){\n            this.props.deleteFWDetail(data);\n        }\n\n        var index = this.state.fixedWeightsData.indexOf(deleteObj);\n\n        if (index > -1) { \n            this.state.fixedWeightsData.splice(index, 1);\n        }\n\n        this.setState({\n            fixedWeightsData: this.state.fixedWeightsData\n        })\n    }\n\n    handleChange = (e, form, filed, maxVol) => {\n\n        this.state.data.find(c => c.tankName === filed).fil = e.target.value\n        this.state.data.find(c => c.tankName === filed).weight = (maxVol * e.target.value / 100).toString();\n \n        this.setState({\n            data: this.state.data\n        })\n    }\n\n    handleFWChange = (e, form, filed) => {\n        if (e.target.name == 'itemName'){\n            this.state.fixedWeightsData.find(c => c.ID === filed).itemName = e.target.value\n        } else if (e.target.name == 'weight') {\n            this.state.fixedWeightsData.find(c => c.ID === filed).weight = e.target.value\n        } else if (e.target.name == 'LCG') {\n            this.state.fixedWeightsData.find(c => c.ID === filed).LCG = e.target.value\n        } else if (e.target.name == 'TCG') {\n            this.state.fixedWeightsData.find(c => c.ID === filed).TCG = e.target.value\n        } else if (e.target.name == 'VCG') {\n            this.state.fixedWeightsData.find(c => c.ID === filed).VCG = e.target.value\n        } else if (e.target.name == 'AFTLocation') {\n            this.state.fixedWeightsData.find(c => c.ID === filed).AFTLocation = e.target.value\n        } else if (e.target.name == 'fordLocation') {\n            this.state.fixedWeightsData.find(c => c.ID === filed).fordLocation = e.target.value\n        }\n\n        this.setState({\n            fixedWeightsData: this.state.fixedWeightsData\n        })\n    }\n\n    sweetAlertHandler = (alert) => {\n        const MySwal = withReactContent(Swal);\n        MySwal.fire({\n            title: alert.title,\n            text: alert.text,\n            type: alert.type\n        });\n    };\n\n    handleFormChange = (e, form, fieldName, innerFieldName) => {\n        try {\n                const { name, value } = e.target;\n                this.setState({\n                    [form]: {\n                        ...this.state[form],\n                        [name]: value\n                    }\n                    })\n        }\n        catch (err) {\n            console.log(err);\n        }\n    }\n\n    handleLoadVessel = (e) => {\n        e.preventDefault();\n \n        if(this.state.dataObj != ''){\n\n            this.props.getAllTankList(this.state.dataObj.vesselName);\n            this.props.getAllWeightList(this.state.dataObj.vesselName);\n            this.setState({\n                listOpen: true\n            });\n        }\n        else{\n            this.sweetAlertHandler({title: 'Request Failed!', type: 'error', text: 'Please Select Vessel!'})\n        }\n\n    }\n\n    handleSolve = (e) => {\n        e.preventDefault();\n        this.setState({\n            isSolve: true\n        });\n    }\n\n    handleSave = () => {\n        console.log(this.state.dataObj);\n\n        this.state.fixedWeightsData.forEach(element => {\n            delete element.ID\n        });\n\n        let loadingConData = {\n            vesselID: this.state.dataObj.vesselName,\n            loadingConditionName: this.state.dataObj.LCName,\n            isActive: true,\n            tankData: this.state.data,\n            weightData: this.state.fixedWeightsData\n        }\n\n        this.props.saveTankDetail(loadingConData);\n        this.props.getAllTankList(this.state.dataObj.vesselName);\n        this.props.getAllWeightList(this.state.dataObj.vesselName);\n    }\n\n    handleSaveModal = () => {\n\n        if(!isEmpty(this.state.dataObj.lcID)) {\n\n            this.state.fixedWeightsData.forEach(element => {\n                const ID = element.ID;\n                \n                if(isNaN(ID)){\n                    delete element.ID\n                }\n            });\n            let loadingConData = {\n                ID: this.state.dataObj.lcID,\n                isActive: true,\n                TankData: this.state.data,\n                weightData: this.state.fixedWeightsData\n            }\n\n            this.props.updateTankDetail(loadingConData);\n\n            this.state.dataObj.lcID = ''\n            this.setState({ loadingConName: 'New Loading Condition'})\n            this.props.getAllTankList();\n            this.setState({ fixedWeightsData: [] })\n        }\n        else {\n            this.setState({ isSave: true })\n        }\n\n    }\n\n    handleSaveModalClose = () => {\n\n        this.setState({ isSave: false })\n    }\n\n    handleOpenModal = () => {\n        this.props.getAllLCList(this.state.dataObj.vesselName)\n        this.setState({ isOpen: true })\n    }\n\n    handleOpenModalClose = () => {\n\n        this.setState({ isOpen: false })\n    }\n\n    handleLoadSavedData = (id) => {\n\n        this.state.dataObj.lcID = id\n\n        if(this.state.dataObj != ''){\n            this.props.getAllSavedTankData(this.state.dataObj.lcID);\n            this.props.getAllSavedFWData(this.state.dataObj.lcID);           \n            this.setState({ loadingConName: this.state.lcList.find(c => c.ID === parseInt(this.state.dataObj.lcID)).LoadingConditionName })\n            this.setState({ isOpen: false })\n        }\n        else{\n            this.sweetAlertHandler({title: 'Request Failed!', type: 'error', text: 'Please Select Loading Condtion!'})\n        }\n    }\n\n    handleAddRow = () => {\n        this.props.getAllFWList(this.state.fixedWeightsData)\n    }\n\n    render() {\n        const { listOpen, isSolve, vesselList, isSave, isOpen, lcList, loadingConName, defaultTab } = this.state;\n\n        const columns = this.columns.map(col => {\n            if (!col.editable) {\n                return col\n            }\n            return {\n                ...col,\n                onCell: record => ({\n                    record,\n                    editing: this.isEditing(record)\n                })\n            }\n        })\n\n        const columnsFW = this.columnsFW.map(col => {\n            if (!col.editable) {\n                return col\n            }\n            return {\n                ...col,\n                onCell: record => ({\n                    record,\n                    editing: this.isEditing(record)\n                })\n            }\n        })\n\n        const columnsLC = this.columnsLC.map(col => {\n            if (!col.editable) {\n                return col\n            }\n            return {\n                ...col,\n                onCell: record => ({\n                    record,\n                    editing: this.isEditing(record)\n                })\n            }\n        })\n\n        return (\n            <Aux>\n                <Row>\n                    <Col xl={12} className='filter-bar'>\n                        <nav className=\"navbar m-b-10 p-10\">\n                            <ul className=\"nav\">\n                                <li className=\"nav-item f-text active\">\n                                    <a className=\"nav-link text-secondary\">Load Vessel: <span className=\"sr-only\">(current)</span></a>\n                                </li>\n                                <li className=\"nav-item f-text active\">\n                                    <div className=\"input-group\">\n                                        <select className=\"form-control add_task_todo\" onChange={(e) => this.handleFormChange(e, 'dataObj')} name=\"vesselName\" id=\"vesselName\">\n                                            <option value=''>Select Vessel Name</option>\n                                            {!isEmpty(vesselList) && vesselList.map((vessel, key) => {\n                                                return <option key={key} value={vessel.ID}>{vessel.VesselName}</option>;\n                                            })}\n                                        </select>\n                                        <div className=\"input-group-append\">\n                                            <button className=\"btn btn-primary btn-msg-send\" type=\"button\" onClick={this.handleLoadVessel}><i className=\"fa fa-ship\" /></button>\n                                        </div>\n                                    </div>\n                                </li>\n                            </ul>\n                            <div className=\"nav-item nav-grid f-view\" style={{ display: 'none' }}>\n                                <span className=\"m-r-15\">Configuration File: </span>\n                                <button type=\"button\" className=\"btn btn-primary btn-icon m-0 mr-1\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"File\">\n                                    <i className=\"fa fa-file-excel-o\" />\n                                </button>\n                                <button type=\"button\" className=\"btn btn-primary btn-icon m-0 mr-1\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Edit\">\n                                    <i className=\"fa fa-pencil-square-o\" />\n                                </button>\n                                <button type=\"button\" className=\"btn btn-primary btn-icon m-0\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"View\">\n                                    <i className=\"fa fa-eye\" />\n                                </button>\n                            </div>\n                        </nav>\n                    </Col>\n                    <Col xl={6}>\n                        <Card>\n                            <Card.Body style={{ minHeight: '630px' }}>\n                                {listOpen &&\n                                    <>\n                                    <Tabs defaultActiveKey=\"tank\" className=\"mb-3\" onSelect={this.handleSelect}>\n                                        <Tab eventKey=\"tank\" title=\"Tank\" style={{minHeight: '390px'}}>\n                                            <DataTable\n                                                noHeader\n                                                responsive\n                                                {...this.state}\n                                                columns={columns}\n                                                paginationPerPage={2}\n                                                className='react-dataTable'\n                                                //sortIcon={<ChevronDown size={10} />}\n                                                //paginationDefaultPage={this.state.currentPage + 1}\n                                                fixedHeader\n                                                fixedHeaderScrollHeight=\"406px\"\n                                                data={this.state.data}\n                                            />\n                                           \n                                        </Tab>\n                                        <Tab eventKey=\"fixedWeights\" title=\"Fixed Weights\" style={{minHeight: '390px'}}>\n                                            <Button variant='outline-primary' size='sm' className='mr-1' onClick={this.handleAddRow}>Add Fixed Weight</Button>\n                                            <DataTable\n                                                noHeader\n                                                responsive\n                                                {...this.state}\n                                                columns={columnsFW}\n                                                paginationPerPage={2}\n                                                className='react-dataTable'\n                                                //paginationDefaultPage={this.state.currentPage + 1}\n                                                fixedHeader\n                                                fixedHeaderScrollHeight=\"406px\"\n                                                data={this.state.fixedWeightsData}\n                                            />\n                                        </Tab>\n                                    </Tabs>\n                                     <h5 className='mt-3'>Loading Condtion - {loadingConName}</h5>\n                                     <hr />\n                                     <div className=\"form-group fill\">\n                                         <Button variant='outline-primary' size='sm' className='mr-1' onClick={this.handleSaveModal}>Save</Button>\n                                         <Button variant='outline-secondary' size='sm' className='mr-1' onClick={this.handleOpenModal}>Open</Button>\n                                         <Button variant='primary' size='sm' onClick={this.handleSolve}>Solve</Button>\n                                     </div>\n                                     <Modal show={isSave} onHide={this.handleSaveModalClose}>\n                                         <Modal.Header closeButton>\n                                             <Modal.Title as=\"h5\">Save Loading Condtions</Modal.Title>\n                                         </Modal.Header>\n                                         <Modal.Body>\n                                             <Form>\n                                                 <Form.Group controlId=\"formBasicLCName\">\n                                                     <Form.Label>Loading Condition Name:</Form.Label>\n                                                     <Form.Control type=\"text\" name=\"LCName\" onChange={(e) => this.handleFormChange(e, 'dataObj')} placeholder=\"Enter Loading Condition Name\" />\n                                                 </Form.Group>\n                                             </Form>\n                                         </Modal.Body>\n                                         <Modal.Footer>\n                                             <Button variant=\"secondary\" onClick={this.handleSaveModalClose}>Cancel</Button>\n                                             <Button variant=\"primary\" onClick={this.handleSave}>Save Changes</Button>\n                                         </Modal.Footer>\n                                     </Modal>\n                                     <Modal show={isOpen} onHide={this.handleOpenModalClose}>\n                                         <Modal.Header closeButton>\n                                             <Modal.Title as=\"h5\">Open Loading Condtions</Modal.Title>\n                                         </Modal.Header>\n                                         <Modal.Body>\n                                             <Form>\n                                                 <Form.Group controlId=\"formBasicLCName\">\n                                                     <Form.Label>Select Loading Condition:</Form.Label>\n\n                                                     <DataTable\n                                                        noHeader\n                                                        responsive\n                                                        {...this.state}\n                                                        columns={columnsLC}\n                                                        paginationPerPage={2}\n                                                        className='react-dataTable'\n                                                        //paginationDefaultPage={this.state.currentPage + 1}\n                                                        fixedHeader\n                                                        fixedHeaderScrollHeight=\"300px\"\n                                                        data={lcList}\n                                                    />\n\n                                                     {/* <select className=\"form-control add_task_todo\" onChange={(e) => this.handleFormChange(e, 'dataObj')} name=\"lcID\" id=\"lcID\">\n                                                         <option value=''>Loading Condition</option>\n                                                         {!isEmpty(lcList) && lcList.map((lc, key) => {\n                                                             return <option key={key} value={lc.ID}>{lc.LoadingConditionName}</option>;\n                                                         })}\n                                                     </select> */}\n                                                 </Form.Group>\n                                             </Form>\n                                         </Modal.Body>\n                                         <Modal.Footer>\n                                             <Button variant=\"secondary\" onClick={this.handleOpenModalClose}>Close</Button>\n                                             {/* <Button variant=\"primary\" onClick={this.handleLoadSavedData}>Load Data</Button> */}\n                                         </Modal.Footer>\n                                     </Modal>\n                                     </>\n                                }\n                                {!listOpen &&\n                                    <Alert variant=\"warning\" className='mb-auto'>\n                                        There are no records to display\n                                    </Alert>\n                                }\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col xl={6}>\n                        <Card style={{ minHeight: '630px' }}>\n                            {isSolve &&\n                            <Card.Header>\n                                <h5>GZ Graph</h5>\n                            </Card.Header>\n                            }\n                            <Card.Body>\n                                {isSolve &&\n                                <>\n                                <Chart {...saleChart} />\n                                <Row>\n                                    <Col xl={6}>\n                                        <Table size=\"sm\" striped hover responsive bordered className=\"table table-condensed\" style={{ height: '180px', overflowY: 'scroll', width: '100%', display: 'block' }}>\n                                            <thead>\n                                                <tr>\n                                                    <th>LCG</th>\n                                                    <th>TCG</th>\n                                                    <th>VCG</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                </tr>\n                                                <tr>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                </tr>\n                                                <tr>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                </tr>\n                                                <tr>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                </tr>\n                                                <tr>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                </tr>\n                                                <tr>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                </tr>\n                                            </tbody>\n                                        </Table>\n                                    </Col>\n                                    <Col xl={6}>\n                                        <Table size=\"sm\" striped hover responsive bordered className=\"table table-condensed\" style={{ height: '180px', overflowY: 'scroll', width: '100%', display: 'block' }}>\n                                            <thead>\n                                                <tr>\n                                                    <th>LCG</th>\n                                                    <th>TCG</th>\n                                                    <th>VCG</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                <tr>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                </tr>\n                                                <tr>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                </tr>\n                                                <tr>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                </tr>\n                                                <tr>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                </tr>\n                                                <tr>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                </tr>\n                                                <tr>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                    <th>0</th>\n                                                </tr>\n                                            </tbody>\n                                        </Table>\n                                    </Col>\n                                </Row>\n                                </>\n                                }\n                                {!isSolve &&\n                                    <Alert variant=\"warning\" className='mb-auto'>\n                                       There are no records to display\n                                    </Alert>\n                                }\n                            </Card.Body>\n \n                        </Card>\n\n                        {/* <Card>\n                            <Card.Body>\n\n                            </Card.Body>\n                        </Card> */}\n                    </Col>\n                </Row>\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    tankList: state.tankList,\n    vesselList: state.vesselList,\n    recordSaveStatus: state.recordSaveStatus,\n    lcList: state.lcList,\n    recordUpdateStatus: state.recordUpdateStatus,\n    fwList: state.fwList,\n    recordDeleteStatus: state.recordDeleteStatus,\n    recordLCDeleteStatus: state.recordLCDeleteStatus,\n    recordCopyStatus: state.recordCopyStatus\n});\n\nconst mapDispatchToProps = dispath => ({\n    getAllTankList: (tankList) => dispath(getAllTankList(tankList)),\n    getAllVesselList: (vesselList) => dispath(getAllVesselList(vesselList)),\n    saveTankDetail: (loadingConData) => dispath(saveTankDetail(loadingConData)),\n    getAllLCList: (lcList) => dispath(getAllLCList(lcList)),\n    getAllSavedTankData: (tankList) => dispath(getAllSavedTankData(tankList)),\n    updateTankDetail: (data) => dispath(updateTankDetail(data)),\n    getAllFWList: (data) => dispath(getAllFWList(data)),\n    getAllSavedFWData: (data) => dispath(getAllSavedFWData(data)),\n    deleteFWDetail: (data) => dispath(deleteFWDetail(data)),\n    deleteLCDetail: (data) => dispath(deleteLCDetail(data)),\n    lcCopyAndCreate: (data) => dispath(lcCopyAndCreate(data)),\n    getAllWeightList: (data) => dispath(getAllWeightList(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Index);","export default {\n    height: 300,\n    type: 'line',\n    options: {\n        chart: {\n            toolbar: {\n                show: false,\n            },\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            width: 2,\n            curve: 'smooth'\n        },\n        xaxis: {\n            type: 'int',\n            categories: [-40, -30, -20, -10, 0, 10, 20, 30, 40, 50, 60, 70, 80, 90],\n            size: 3\n        },\n        colors: ['#9ccc65'],\n        fill: {\n            type: 'solid',\n        },\n        markers: {\n            size: 3,\n            colors: ['#9ccc65'],\n            opacity: 0.9,\n            strokeWidth: 2,\n            hover: {\n                size: 5,\n            }\n        },\n        grid: {\n            borderColor: '#e2e5e885',\n        },\n        yaxis: {\n            min: -4,\n            max: 2,\n        }\n    },\n    series: [{\n        name: 'Bronze',\n        data: [-1.159, -1.418, -1.191, -0.524, 0, 0.524, 1.191, 1.417, 1.159, 1.417, 1.159, 0.448, -0.497, -1.53, -2.567, -3.546]\n    }]\n}","import axios from 'axios';\nimport qs from 'querystring';\n\nimport {API_URL} from '../../util/api';\nimport {GET_FW_LIST, DELETE_RECORD_STATUS, CLEAR_ALL_FW_DATA, ERROR} from '../actions';\nimport isEmpty from '../../util/isEmpty';\nimport fwDataMapping from '../../util/fwDataMapping';\nimport moment from \"moment\";\n\nconst APIPath = \"WeightData\";\n\nexport const getFWList = fwList => ({\n    type: GET_FW_LIST,\n    fwList: fwList,\n});\n\nexport const RecordDeleteStatus = recordDeleteStatus => ({\n    type: DELETE_RECORD_STATUS,\n    recordDeleteStatus,\n});\n\nexport const error = error => ({\n    type: ERROR,\n    error,\n});\n\nexport const clearAll = () => ({\n    type: CLEAR_ALL_FW_DATA,\n});\n\nconst config = {\n    headers: {\n        //'Content-Type': 'application/x-www-form-urlencoded'\n    }\n}\n\n\nexport const getAllFWList = (data) => dispath => {\n\n    dispath(getFWList([]));\n\n    let dataObjs = data;\n\n    let obj = {\n        ID: \"New\" + moment().unix(),\n        itemName: \"\",\n        weight: \"\",\n        LCG: \"\",\n        TCG: \"\",\n        VCG: \"\",\n        AFTLocation: \"\",\n        fordLocation: \"\"\n    }\n\n    dataObjs.push(obj);\n\n    dispath(getFWList(dataObjs));\n    // axios.get(API_URL + `${APIPath}?${qs.stringify(data)}`, config)\n    // .then(res => {\n\n    //     if(!isEmpty(res.data.status) && res.data.status != \"Fail\" )\n    //     {\n    //         console.log(res.data.result);\n    //         dispath(getTankList(res.data.result));\n    //     }\n    //     else if(!isEmpty(res.data.status) && res.data.status == \"Fail\" )\n    //     {\n    //         dispath(error(res.data.message))\n    //     }\n    //     else\n    //     {\n    //         dispath(error(\"Error fetching list of tanks\"))\n    //     }\n    // })\n    // .catch(err => {\n    //     if (err.response) {\n    //         dispath(error(err.response.data.message || 'ERROR'));\n    //     } else {\n    //         dispath(error('API Error. Please contact administrator.'));\n    //     }\n    // }); \n}\n\nexport const getAllSavedFWData = (data) => dispath => {\n\n    dispath(getFWList([]));\n\n    axios.get(API_URL + `${APIPath}/GetAllByLoadingConditionId?LoadingConditionID=${data}`, config)\n    .then(res => {\n\n        if(!isEmpty(res.data))\n        {\n            let result = fwDataMapping(res.data);\n            dispath(getFWList(result));\n        }\n        else\n        {\n            dispath(error(\"Error fetching list of Saved Tank Data\"))\n        }\n    })\n    .catch(err => {\n        if (err.response) {\n            dispath(error(err.response.data.message || 'ERROR'));\n        } else {\n            dispath(error('API Error. Please contact administrator.'));\n        }\n    }); \n}\n\nexport const deleteFWDetail = (data) => dispath => {\n    axios.post(API_URL + `${APIPath}/DeleteWeightData`, data, config)\n        .then(res => {\n            if(res.data == true){\n                dispath(RecordDeleteStatus('Fixed Weight Data Delete Successfully.')) \n                dispath(clearAll());\n            }\n            else {\n                dispath(error('Fixed Weight Data Delete Request Error. Please contact administrator.'));\n            }\n        })\n        .catch(err => {\n            dispath(error(err.response.data.message || 'ERROR'));\n        });   \n}\n","import isEmpty from \"./isEmpty\";\n\nconst tankDataMapping = (value) => {\n    let dataObjArr = [];\n\n    for(var data of value){\n        let obj = {\n            ID: data.ID,\n            LoadingConditionID: data.LoadingConditionID,\n            tankName: data.TankName,\n            maxVolume: !isEmpty(data.MaxVolume) ? data.MaxVolume : '0',\n            density: !isEmpty(data.Density) ? data.Density : '',\n            sounding: !isEmpty(data.Sounding) ? data.Sounding : '0',\n            fil: !isEmpty(data.Fil) ? data.Fil : '0',\n            weight: !isEmpty(data.Weight) ? data.Weight : '0',\n            location: !isEmpty(data.Location) ? data.Location : '',\n            LCG: !isEmpty(data.LCG) ? data.LCG : '0',\n            TCG: !isEmpty(data.TCG) ? data.TCG : '0',\n            VCG: !isEmpty(data.VCG) ? data.VCG: '0'\n        }\n\n        dataObjArr.push(obj);\n    }\n\n    return dataObjArr;\n}\n\nexport default tankDataMapping;","import axios from 'axios';\nimport qs from 'querystring';\n\nimport {API_URL} from '../../util/api';\nimport {GET_TANK_LIST, GET_FW_LIST, GET_LC_LIST, GET_TANK_DETAILS, SAVE_RECORD_STATUS, UPDATE_RECORD_STATUS, LC_DELETE_RECORD_STATUS, LC_COPY_RECORD_STATUS, CLEAR_ALL_TANK_DATA, ERROR} from '../actions';\nimport isEmpty from '../../util/isEmpty';\nimport tankDataMapping from '../../util/tankDataMapping';\nimport fwDataMapping from '../../util/fwDataMapping';\nimport moment from \"moment\";\n\nconst APIPath = \"LoadingCondition\";\nconst TankDataAPIPath = \"TankData\";\nconst WeightDataAPIPath = \"WeightData\"\n\nexport const getTankList = tankList => ({\n    type: GET_TANK_LIST,\n    tankList: tankList,\n});\n\nexport const getFWList = fwList => ({\n    type: GET_FW_LIST,\n    fwList: fwList,\n});\n\nexport const getLCList = lcList => ({\n    type: GET_LC_LIST,\n    lcList: lcList,\n});\n\nexport const getTankDetails = getTankDetails => ({\n    type: GET_TANK_DETAILS,\n    getTankDetails,\n});\n\nexport const RecordSaveStatus = recordSaveStatus => ({\n    type: SAVE_RECORD_STATUS,\n    recordSaveStatus,\n});\n\nexport const RecordUpdateStatus = recordUpdateStatus => ({\n    type: UPDATE_RECORD_STATUS,\n    recordUpdateStatus,\n});\n\nexport const RecordDeleteStatus = recordLCDeleteStatus => ({\n    type: LC_DELETE_RECORD_STATUS,\n    recordLCDeleteStatus,\n});\n\nexport const RecordCopyStatus = recordCopyStatus => ({\n    type: LC_COPY_RECORD_STATUS,\n    recordCopyStatus,\n});\n\nexport const error = error => ({\n    type: ERROR,\n    error,\n});\n\nexport const clearAll = () => ({\n    type: CLEAR_ALL_TANK_DATA,\n});\n\nconst config = {\n    headers: {\n        //'Content-Type': 'application/x-www-form-urlencoded'\n    }\n}\n\nexport const getAllTankList = (data) => dispath => {\n\n    dispath(getTankList([]));\n\n    axios.get(API_URL + `${TankDataAPIPath}/GetAllByVesselId?VesselId=${data}`, config)\n    .then(res => {\n        if(!isEmpty(res.data))\n        {\n            res.data.forEach(element => {\n                delete element.LoadingConditionID;\n                delete element.ID;\n            });\n\n            let result = tankDataMapping(res.data);\n            dispath(getTankList(result));\n        }\n        else\n        {\n            dispath(error(\"Error fetching list of Tank Data\"))\n        }\n    })\n    .catch(err => {\n        if (err.response) {\n            dispath(error(err.response.data.message || 'ERROR'));\n        } else {\n            dispath(error('API Error. Please contact administrator.'));\n        }\n    }); \n}\n\nexport const getAllWeightList = (data) => dispath => {\n\n    dispath(getFWList([]));\n\n    axios.get(API_URL + `${WeightDataAPIPath}/GetAllByVesselId?VesselId=${data}`, config)\n    .then(res => {\n        if(!isEmpty(res.data))\n        {\n            res.data.forEach((element, key) => {\n                delete element.LoadingConditionID;\n                element.ID = \"New\" + moment().unix() + key;\n            });\n\n            let result = fwDataMapping(res.data);\n            dispath(getFWList(result));\n        }\n        else\n        {\n            dispath(error(\"Error fetching list of Weight Data\"))\n        }\n    })\n    .catch(err => {\n        if (err.response) {\n            dispath(error(err.response.data.message || 'ERROR'));\n        } else {\n            dispath(error('API Error. Please contact administrator.'));\n        }\n    }); \n}\n\nexport const getAllLCList = (data) => dispath => {\n\n    dispath(getLCList([]));\n\n    axios.get(API_URL + `${APIPath}/GetAllByVesselId?VesselId=${data}`, config)\n    .then(res => {\n\n        if(!isEmpty(res.data))\n        {\n            dispath(getLCList(res.data));\n        }\n        else\n        {\n            dispath(error(\"Error fetching list of Loading Conditions\"))\n        }\n    })\n    .catch(err => {\n        if (err.response) {\n            dispath(error(err.response.data.message || 'ERROR'));\n        } else {\n            dispath(error('API Error. Please contact administrator.'));\n        }\n    }); \n}\n\nexport const getAllSavedTankData = (data) => dispath => {\n\n    dispath(getTankList([]));\n\n    axios.get(API_URL + `${TankDataAPIPath}/GetAllByLoadingConditionId?LoadingConditionID=${data}`, config)\n    .then(res => {\n\n        if(!isEmpty(res.data))\n        {\n            let result = tankDataMapping(res.data);\n            dispath(getTankList(result));\n        }\n        else\n        {\n            dispath(error(\"Error fetching list of Saved Tank Data\"))\n        }\n    })\n    .catch(err => {\n        if (err.response) {\n            dispath(error(err.response.data.message || 'ERROR'));\n        } else {\n            dispath(error('API Error. Please contact administrator.'));\n        }\n    }); \n}\n\n// export const getTankDetailsByID = (id) => dispath => {\n//     axios.get(API_URL + `${APIPath}/${id}`)\n//     .then(res => {\n//         if(!isEmpty(res.data.status) && res.data.status != \"Fail\" )\n//         {\n//             dispath(getTankDetails(res.data.result));\n//         }\n//         else if(!isEmpty(res.data.status) && res.data.status == \"Fail\" )\n//         {\n//             dispath(error(res.data.message))\n//         }\n//         else\n//         {\n//             dispath(error(\"Error making tank fetch request. Please try again.\"))\n//         }\n//     })\n//     .catch(err => {\n//         if (err.response) {\n//             dispath(error(err.response.data.message || 'ERROR'));\n//         } else {\n//             dispath(error('API Error. Please contact administrator.'));\n//         }\n//     });\n// }\n\nexport const saveTankDetail = (data) => dispath => {\n    axios.post(API_URL + `${TankDataAPIPath}/AddTankData`, data, config)\n        .then(res => {\n            if(res.data == true){\n                dispath(RecordSaveStatus('Tank Data Save Successfully.')) \n                dispath(clearAll());\n            }\n            else {\n                dispath(error('Tank Data Save Request Error. Please contact administrator.'));\n            }\n        })\n        .catch(err => {\n            dispath(error(err.response.data.message || 'ERROR'));\n        });   \n}\n\nexport const updateTankDetail = (data) => dispath => {\n    axios.post(API_URL + `${TankDataAPIPath}/UpdateTankData`, data, config)\n    .then(res => {\n        if(res.data == true){\n            dispath(RecordUpdateStatus('Tank Data Update Successfully.')) \n            dispath(clearAll());\n        }\n        else {\n            dispath(error('Tank Data Update Request Error. Please contact administrator.'));\n        }\n    })\n    .catch(err => {\n        if (err.response) {\n            dispath(error(err.response.data.message || 'ERROR'));\n        } else {\n            dispath(error('API Error. Please contact administrator.'));\n        }\n    }); \n}\n\nexport const deleteLCDetail = (data) => dispath => {\n    axios.post(API_URL + `${APIPath}/DeleteLoadingCondition`, data, config)\n        .then(res => {\n            if(res.data == true){\n                dispath(RecordDeleteStatus('Loading Condition Data Deleted Successfully.')) \n                dispath(clearAll());\n            }\n            else {\n                dispath(error('Loading Condition Delete Request Error. Please contact administrator.'));\n            }\n        })\n        .catch(err => {\n            dispath(error(err.response.data.message || 'ERROR'));\n        });   \n}\n\nexport const lcCopyAndCreate = (data) => dispath => {\n    axios.post(API_URL + `${APIPath}/LCCopyAndCreate`, data, config)\n        .then(res => {\n            if(res.data == true){\n                dispath(RecordCopyStatus('Loading Condition Copy and Create Successfully.')) \n                dispath(clearAll());\n            }\n            else {\n                dispath(error('Loading Condition Copy and Create Request Error. Please contact administrator.'));\n            }\n        })\n        .catch(err => {\n            dispath(error(err.response.data.message || 'ERROR'));\n        });   \n}\n\nexport const clearError = () => dispath =>{\n    dispath(error(''));\n}","export const API_URL = \"https://shipsafe.azurewebsites.net/api/\"\n//export const API_URL = \"https://localhost:44376/api/\"","import axios from 'axios';\nimport qs from 'querystring';\n\nimport {API_URL} from '../../util/api';\nimport {GET_VESSEL_LIST, SAVE_RECORD_STATUS, UPDATE_RECORD_STATUS,  CLEAR_ALL_VESSEL_DATA, ERROR} from '../actions';\nimport isEmpty from '../../util/isEmpty';\n\nconst APIPath = \"Vessel\";\n\nexport const getVesselList = vesselList => ({\n    type: GET_VESSEL_LIST,\n    vesselList: vesselList\n});\n\nexport const RecordSaveStatus = recordSaveStatus => ({\n    type: SAVE_RECORD_STATUS,\n    recordSaveStatus,\n});\n\nexport const RecordUpdateStatus = recordUpdateStatus => ({\n    type: UPDATE_RECORD_STATUS,\n    recordUpdateStatus,\n});\n\nexport const error = error => ({\n    type: ERROR,\n    error\n});\n\nexport const clearAll = () => ({\n    type: CLEAR_ALL_VESSEL_DATA\n});\n\nconst config = {\n    headers: {\n        //'Content-Type': 'application/x-www-form-urlencoded'\n    }\n}\n\nexport const getAllVesselList = (data) => dispath => {\n\n    dispath(getVesselList([]));\n\n    axios.get(API_URL + `${APIPath}/GetAllVessels?${qs.stringify(data)}`, config)\n    .then(res => {\n        console.log(res.data);\n        if(!isEmpty(res.data))\n        {\n            console.log(res.data);\n            dispath(getVesselList(res.data));\n        }\n        else\n        {\n            dispath(error(\"Error fetching list of vessels\"))\n        }\n    })\n    .catch(err => {\n        if (err.response) {\n            dispath(error(err.response.data.message || 'ERROR'));\n        } else {\n            dispath(error('API Error. Please contact administrator.'));\n        }\n    }); \n\n}\n\nexport const saveSingleVessel = (data) => dispath => {\n    axios.post(API_URL + `${APIPath}/AddVessel`, data, config)\n    .then(res => {\n        if(res.data.status === 0){\n            dispath(RecordSaveStatus(res.data.message)) \n            dispath(clearAll());\n        }\n        else {\n            dispath(RecordSaveStatus(res.data)) \n            dispath(clearAll());\n        }\n    })\n    .catch(err => {\n        console.log(err)\n        if (err.response) {\n            dispath(error(err.response.data.message || 'ERROR'));\n        } else {\n            dispath(error('API Error. Please contact administrator.'));\n        }\n    });  \n}\n\nexport const updateSingleVessel = (data) => dispath => {\n    axios.post(API_URL + `${APIPath}/UpdateVessel`, data, config)\n    .then(res => {\n        if(res.data.status === 0){\n            dispath(RecordUpdateStatus(res.data.message)) \n            dispath(clearAll());\n        }\n        else {\n            dispath(RecordUpdateStatus(res.data)) \n            dispath(clearAll());\n        }\n    })\n    .catch(err => {\n        if (err.response) {\n            dispath(error(err.response.data.message || 'ERROR'));\n        } else {\n            dispath(error('API Error. Please contact administrator.'));\n        }\n    }); \n}\n\nexport const deletVessel = (data) => dispath => {\n    axios.post(API_URL + `${APIPath}/DeleteVessel`, data, config)\n        .then(res => {\n            if(res.data == true){\n                dispath(RecordUpdateStatus('Vessel Data Deleted Successfully.')) \n                dispath(clearAll());\n            }\n            else {\n                dispath(error('Vessel Delete Request Error. Please contact administrator.'));\n            }\n        })\n        .catch(err => {\n            if (err.response) {\n                dispath(error(err.response.data.message || 'ERROR'));\n            } else {\n                dispath(error('API Error. Please contact administrator.'));\n            }\n        });   \n}\n\nexport const clearError = () => dispath =>{\n    dispath(error(''));\n}"],"sourceRoot":""}